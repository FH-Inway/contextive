name: Contextive Publish
on:
  release:
    types: [published]
  
env:
  dotnet-version: '7.0.x'
jobs:
  get-matrix:
    name: "Load Release Matrix"
    outputs:
      matrix: ${{ steps.load-matrix.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - id: load-matrix
        name: Load Build Matrix
        run: |
          matrix="matrix=$(yq -P -o=json .github/release-matrix.yml | jq -c .)"
          echo $matrix
          echo $matrix >> $GITHUB_OUTPUT

  language-server:
    name: Language Server
    needs: get-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get-matrix.outputs.matrix) }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - uses: ./.github/actions/init-dotnet

      - name: Build
        id: build
        run: dotnet fsi language-server/build.fsx -- -r ${{ matrix.dotnet_runtime }} --release ${{ github.ref_name }}
        working-directory: src
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

  vscode:
    name: VsCode Extension
    needs:
      - get-matrix
      - language-server
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get-matrix.outputs.matrix) }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false

      - uses: ./.github/actions/init-dotnet

      - name: Build
        id: build
        run: dotnet fsi vscode/build.fsx -- -r ${{ matrix.dotnet_runtime }} --release ${{ github.ref_name }} --vsce-platform ${{ matrix.vsce_platform }}
        working-directory: src
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}